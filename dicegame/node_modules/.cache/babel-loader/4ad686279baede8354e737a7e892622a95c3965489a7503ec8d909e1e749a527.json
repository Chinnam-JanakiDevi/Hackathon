{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathon\\\\dicegame\\\\src\\\\Disease.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\nimport 'chart.js/auto';\nimport { Disease } from './DiseaseService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CountrySelector = () => {\n  _s();\n  const [countries] = useState(['India', 'USA', 'Brazil']);\n  const [selectedCountry, setSelectedCountry] = useState('India');\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await Disease(selectedCountry);\n        setCovidData(data.timeline);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getData();\n  }, [selectedCountry]);\n  const handleCountryChange = e => {\n    setSelectedCountry(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country-select\",\n        children: \"Select Country: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country-select\",\n        value: selectedCountry,\n        onChange: handleCountryChange,\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(CountrySelector, \"k38Pm1WX7KLPdWHQ9VxmzvRPRDc=\");\n_c = CountrySelector;\nexport default CountrySelector;\nvar _c;\n$RefreshReg$(_c, \"CountrySelector\");","map":{"version":3,"names":["React","useState","useEffect","Disease","jsxDEV","_jsxDEV","Fragment","_Fragment","CountrySelector","_s","countries","selectedCountry","setSelectedCountry","getData","data","setCovidData","timeline","error","console","handleCountryChange","e","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","country","_c","$RefreshReg$"],"sources":["D:/Hackathon/dicegame/src/Disease.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { ChartData, ChartOptions } from 'chart.js';\r\nimport 'chart.js/auto';\r\nimport { DiseaseDetails, Disease } from './DiseaseService';\r\n\r\ninterface CovidTimeline {\r\n    cases: { [date: string]: number };\r\n    deaths: { [date: string]: number };\r\n    recovered: { [date: string]: number };\r\n}\r\n\r\n\r\nconst CountrySelector: React.FC = () => {\r\n    const [countries] = useState<string[]>(['India', 'USA', 'Brazil']);\r\n    const [selectedCountry, setSelectedCountry] = useState<string>('India');\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const data = await Disease(selectedCountry);\r\n                setCovidData(data.timeline);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        getData();\r\n    }, [selectedCountry]);\r\n\r\n    const handleCountryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setSelectedCountry(e.target.value);\r\n    };\r\n    return (\r\n        <>\r\n            <div>\r\n                <label htmlFor=\"country-select\">Select Country: </label>\r\n                <select id=\"country-select\" value={selectedCountry} onChange={handleCountryChange}>\r\n                    {countries.map((country) => (\r\n                        <option key={country} value={country}>\r\n                            {country}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CountrySelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;;AAGA,OAAO,eAAe;AACtB,SAAyBC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAS3D,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,CAAC,GAAGT,QAAQ,CAAW,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;EAClE,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAS,OAAO,CAAC;EAEvEC,SAAS,CAAC,MAAM;IACZ,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMX,OAAO,CAACQ,eAAe,CAAC;QAC3CI,YAAY,CAACD,IAAI,CAACE,QAAQ,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IACDJ,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,eAAe,CAAC,CAAC;EAErB,MAAMQ,mBAAmB,GAAIC,CAAuC,IAAK;IACrER,kBAAkB,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EACD,oBACIjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACIlB,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAOmB,OAAO,EAAC,gBAAgB;QAAAD,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxDvB,OAAA;QAAQwB,EAAE,EAAC,gBAAgB;QAACP,KAAK,EAAEX,eAAgB;QAACmB,QAAQ,EAAEX,mBAAoB;QAAAI,QAAA,EAC7Eb,SAAS,CAACqB,GAAG,CAAEC,OAAO,iBACnB3B,OAAA;UAAsBiB,KAAK,EAAEU,OAAQ;UAAAT,QAAA,EAChCS;QAAO,GADCA,OAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC,gBACR,CAAC;AAEX,CAAC;AAACnB,EAAA,CAjCID,eAAyB;AAAAyB,EAAA,GAAzBzB,eAAyB;AAmC/B,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}